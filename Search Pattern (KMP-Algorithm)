class Solution {
    search(pat, txt) {
        const result = []; // To store the starting indices of occurrences
        const patLen = pat.length; // Length of the pattern
        const txtLen = txt.length; // Length of the text

        // Loop through the text to find all occurrences of the pattern
        for (let i = 0; i <= txtLen - patLen; i++) {
            // Check if the substring matches the pattern
            if (txt.substring(i, i + patLen) === pat) {
                result.push(i); // Add the index to the result
            }
        }

        return result; // Return the indices
    }
}

// Example usage:
const solution = new Solution();
const txt = "abcab";
const pat = "ab";
console.log(solution.search(pat, txt)); // Output: [0, 3]
